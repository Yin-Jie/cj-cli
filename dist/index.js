#!/usr/bin/env node
"use strict";const e=require("chalk");var r=r=>console.log(e.red(r));const o=require("semver"),i=require("../package.json").engines.node;const s=require("fs-extra"),n=require("inquirer"),{execFileSync:a}=require("child_process"),c=require("download-git-repo"),t=require("handlebars"),p=require("ora");let d;var u={create:{command:"create <project-name>",description:"初始化项目",action:async e=>{if(s.existsSync(e)){const{override:o}=await n.prompt([{type:"confirm",name:"override",message:"当前目录中已经存在同名的文件夹/项目。是否覆盖?",default:!1}]);o?s.removeSync(e):(r("停止创建项目。"),process.exit(-1))}const o=a("git",["config","user.name"],{encoding:"utf-8"}),{description:i,author:u}=await n.prompt([{type:"input",name:"description",message:"项目描述"},{type:"input",name:"author",message:"你的名字",default:o.trim()}]);d=p("拉取远程模版中 loading...").start(),c("jayyoonn/cj-cli-template",e,(r=>{if(r)return void d.fail(`拉取模版失败${r}`);const o=`${e}/package.json`,n=s.readFileSync(o,"utf-8"),a=t.compile(n)({description:i,author:u,name:e});s.writeFileSync(o,a),d.succeed("创建项目成功!!")}))}}};const{program:m}=require("commander"),l=require("../package.json");o.satisfies(process.version,i,{includePrerelease:!0})||(r(`你当前使用的Node版本 ${process.version}, 但脚手架需要 Node版本 ${i}.\n请升级你的Node版本`),process.exit(-1)),Object.values(u).forEach((e=>{const{command:r,description:o,action:i}=e;m.command(r).description(o).action(i)})),m.version(`${l.version}`,"-v","--version").usage("<command> [options]"),m.parse(process.argv),process.argv.slice(2).length||m.outputHelp();
